version: 2
jobs:
  build:
    docker:
      - image: cimg/python:3.10.5
    
    working_directory: ~/repo
    
    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          - v2-dependencies-

      - run:
          name: Install pandoc
          command: |
                    sudo apt-get update 
                    wget https://github.com/jgm/pandoc/releases/download/2.18/pandoc-2.18-1-amd64.deb
                    sudo dpkg -i pandoc-2.18-1-amd64.deb
          
      - run:
          name: Install 7z, unrar
          command: |
                    sudo apt-get install -y p7zip-full
          
      - run:
          name: Install InkScape
          command: |
                    sudo apt-get install -y inkscape
          
      - run:
          name: Install graphviz
          command: |
                    sudo apt-get install -y graphviz
          
      - run:
          name: Install dependencies for proj
          command: |
            sudo apt-get install -y libgeos-dev proj-data graphviz sqlite3 libtiff5 libtiff5-dev libtiff-dev libsqlite3-dev libcurl4-gnutls-dev

      - run:
          name: build proj
          command: |
            # see https://stackoverflow.com/questions/72442087/cant-install-proj-8-0-0-for-cartopy-linux
            wget https://download.osgeo.org/proj/proj-9.0.0.tar.gz
            tar -xf proj-9.0.0.tar.gz
            cd proj-9.0.0
            mkdir build && cd build
            cmake ..
            cmake --build .
            sudo cmake --build . --target install
            cd ..

      - run:
          name: Install llvmlite
          command: |
            sudo apt-get install lsb-release wget software-properties-common
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            sudo ./llvm.sh 10
            ls /usr/bin/llvm*

      - run:
          name: install dependencies
          command: |
            pip install wheel
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: check list of dependencies
          command: |
            pip freeze
            apt list --installed
        
      - run:
          name: run tests
          command: |
            export PYTHONPATH=src
            python setup.py unittests

      - run:
          name: wheel
          command: |
            export PYTHONPATH=src
            python setup.py bdist_wheel
            mkdir -p test-reports/dist
            cp dist/*.whl test-reports/dist
            
      - store_artifacts:
          path: test-reports
          destination: test-reports
